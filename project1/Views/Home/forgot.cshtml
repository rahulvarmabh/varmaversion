@model project1.Models.forgot

@{
    ViewBag.Title = "forgot";
    Layout = "~/Views/Shared/login_layout.cshtml";
}
<html>
<head>
    <style>
        .form-horizontal {
            padding-left: 50%;
        }

        .top-left {
            position: absolute;
            top: 25px;
            left: 16px;
            font-size: xx-large;
            font: bolder;
            color: white;
            font-family: Calibri;
        }

        .top-left1 {
            position: absolute;
            top: 200px;
            left: 100px;
            font-size: xx-large;
            font: bolder;
            font-family: Calibri;
        }

        .top-left2 {
            position: absolute;
            top: 300px;
            left: 100px;
            font-family: Calibri;
        }

        .button {
            background-color: royalblue;
            border: none;
            color: white;
            padding: 15px 32px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
        }

        fieldset.scheduler-border {
            border: 1px groove #ddd !important;
            padding: 0 1.4em 1.4em 1.4em !important;
            margin: 0 0 1.5em 0 !important;
            -webkit-box-shadow: 0px 0px 0px 0px #000;
            box-shadow: 0px 0px 0px 0px #000;
        }

        legend.scheduler-border {
            font-size: 1.2em !important;
            font-weight: bold !important;
            text-align: left !important;
        }
    </style>
</head>
<body style="background-image: url('https://visme.co/blog/wp-content/uploads/2017/07/50-Beautiful-and-Minimalist-Presentation-Backgrounds-01.jpg'); background-size: cover; color: white">
    <img src="https://www.synerscope.com/wp-content/uploads/2019/08/kpmg-logo-vector.png" alt="logo" height="50" width="100" class="top-left" />



    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <fieldset class="scheduler-border">
            <legend class="scheduler-border"></legend>
                <h2 style="color:dodgerblue;margin-left:700px">RESET PASSWORD</h2>
            <br />
            <div class="form-horizontal">
        
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.emailid, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.emailid, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.emailid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.securityquestion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="color:black">
                @Html.DropDownList("securityquestion", new List<SelectListItem>
{ new SelectListItem{Text="What is your favorite food?",Value="What is your favorite food?",Selected=true},
new SelectListItem{Text="What is your favorite sport?",Value="What is your favorite sport?"},
new SelectListItem{Text="What is your favorite cricketer?",Value="Who is your favorite cricketer?"}});
                @*@Html.EditorFor(model => model.securityquestion, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.securityquestion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.securityanswer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.securityanswer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.securityanswer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.newpassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.newpassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.newpassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.confirmpassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.confirmpassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.confirmpassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10"  style="margin-left: 150px">
                <input type="submit" value="Reset Password" class="button" />
            </div>
        </div>
    </div>
            </fieldset>
    }
    </body>
</html>

    @*<div>
        @Html.ActionLink("Back to Login", "Index")
    </div>*@

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
